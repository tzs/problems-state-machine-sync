#LyX 1.3 created this file. For more info see http://www.lyx.org/
\lyxformat 221
\textclass article
\language english
\inputencoding auto
\fontscheme default
\graphics default
\paperfontsize default
\papersize Default
\paperpackage a4
\use_geometry 0
\use_amsmath 0
\use_natbib 0
\use_numerical_citations 0
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\quotes_times 2
\papercolumns 1
\papersides 1
\paperpagestyle default

\layout Title

The Synchronized State-Machine Puzzle
\layout Author

Tim Smith
\layout Date

April 17, 2004
\layout Abstract

This is a problem that I 
\emph on 
think
\emph default 
 I got from a Martin Gardner book, where it was stated in terms of a firing
 squad of soldiers, each of which could only communicate with his immediate
 neighbor.
 The problem is to specify a procedure by which they can all fire simultaneously.
\layout Abstract

I have reformulated the problem in terms of block boxes and state machines,
 both to make it more precise, and because that is more geekly.
\layout Paragraph

The Black Boxes
\layout Standard

There are 
\begin_inset Formula $N$
\end_inset 

 identical black boxes, arranged in a line.
 We will call the boxes 
\begin_inset Formula $B_{1}$
\end_inset 

, 
\begin_inset Formula $B_{2}$
\end_inset 

, \SpecialChar \ldots{}
, 
\begin_inset Formula $B_{N}$
\end_inset 

.
 
\layout Standard

Each box has an LED on top.
\layout Standard

Each box has an internal clock signal.
 The boxes all run at the same clock speed, and their clocks are synchronized.
\layout Standard

Each box has two inputs, 
\begin_inset Formula $IN_{L}$
\end_inset 

 and 
\begin_inset Formula $IN_{R}$
\end_inset 

, and two outputs, 
\begin_inset Formula $OUT_{L}$
\end_inset 

 and 
\begin_inset Formula $OUT_{R}$
\end_inset 

.
\layout Standard

Each box may set the outputs to any of 32 voltage levels, 
\begin_inset Formula $V_{1}$
\end_inset 

, \SpecialChar \ldots{}
, 
\begin_inset Formula $V_{32}$
\end_inset 

.
\layout Standard

Each box can sense those 32 voltage levels on the inputs.
 The inputs are latched at the start of each clock cycle.
\layout Standard


\begin_inset Formula $OUT_{R}$
\end_inset 

 of 
\begin_inset Formula $B_{i}$
\end_inset 

 
\begin_inset Formula $(1\leq i<N)$
\end_inset 

 is connected to 
\begin_inset Formula $IN_{L}$
\end_inset 

 of 
\begin_inset Formula $B_{i+1}$
\end_inset 

.
\layout Standard


\begin_inset Formula $OUT_{L}$
\end_inset 

 of 
\begin_inset Formula $B_{i}$
\end_inset 

 
\begin_inset Formula $(1<i\leq N)$
\end_inset 

 is connected to 
\begin_inset Formula $IN_{R}$
\end_inset 

 of 
\begin_inset Formula $B_{i-1}$
\end_inset 

.
\layout Standard


\begin_inset Formula $OUT_{L}$
\end_inset 

 of 
\begin_inset Formula $B_{1}$
\end_inset 

 is not connected to anything.
 
\begin_inset Formula $IN_{L}$
\end_inset 

 of 
\begin_inset Formula $B_{1}$
\end_inset 

 is connected to a button, labeled 
\begin_inset Quotes eld
\end_inset 

Start
\begin_inset Quotes erd
\end_inset 

.
 When this button is not pressed, 
\begin_inset Formula $B_{1}$
\end_inset 

 will sense 
\begin_inset Formula $V_{32}$
\end_inset 

 on its 
\begin_inset Formula $IN_{L}$
\end_inset 

.
 When the 
\begin_inset Quotes eld
\end_inset 

Start
\begin_inset Quotes erd
\end_inset 

 button is pressed, 
\begin_inset Formula $B_{1}$
\end_inset 

 will sense 
\begin_inset Formula $V_{31}$
\end_inset 

.
\layout Standard


\begin_inset Formula $OUT_{R}$
\end_inset 

 of 
\begin_inset Formula $B_{N}$
\end_inset 

 is not connected to anything.
 
\begin_inset Formula $IN_{R}$
\end_inset 

 of 
\begin_inset Formula $B_{N}$
\end_inset 

 is connected to a voltage source that causes 
\begin_inset Formula $B_{N}$
\end_inset 

 to sense 
\begin_inset Formula $V_{30}$
\end_inset 

.
\layout Standard
\added_space_top defskip \added_space_bottom defskip 

\begin_inset Graphics
	filename state1.eps
	lyxscale 50
	scale 50
	keepAspectRatio

\end_inset 


\layout Standard

Each box powers up with its LED off, and with both outputs outputting 
\begin_inset Formula $V_{1}$
\end_inset 

.
\layout Standard

Each box contains a finite state machine.
 The inputs to the state machine are 
\begin_inset Formula $IN_{L}$
\end_inset 

 and 
\begin_inset Formula $IN_{R}$
\end_inset 

, and, or course, the current state number.
 The actions the state machine can take are to turn the LED on or off, and
 to set the voltage level on 
\begin_inset Formula $OUT_{L}$
\end_inset 

 and 
\begin_inset Formula $OUT_{R}$
\end_inset 

, and, of course, to change states.
\layout Paragraph

The Puzzle
\layout Standard

Design the state machine so that when the 
\begin_inset Quotes eld
\end_inset 

Start
\begin_inset Quotes erd
\end_inset 

 button is pressed, all the boxes will turn their LEDs on at the same time.
 A description of the algorithm the state machines implement will be sufficient
 to solve this problem.
 You do not have to produce an actual specification of the state machine,
 although doing so earns extra geek points.
\layout Standard

You may specify constraints on the value of 
\begin_inset Formula $N$
\end_inset 

, provided that there are arbitrary large 
\begin_inset Formula $N$
\end_inset 

 that meet those constraints.
 For example, you may specify that your solution requires that 
\begin_inset Formula $N$
\end_inset 

 be even, or that 
\begin_inset Formula $N$
\end_inset 

 be prime, or that 
\begin_inset Formula $N$
\end_inset 

 be a power of two.
 You could not require that 
\begin_inset Formula $N$
\end_inset 

 be a Mersenne prime, for example, because it is not known if there are
 arbitrarily large Mersenne primes.
\layout Subparagraph

Note
\layout Standard


\begin_inset Formula $N$
\end_inset 

 can be 
\emph on 
arbitrarily
\emph default 
 large.
 This means that solutions based on counting will NOT work.
 For example, an algorithm most people quickly come up with is to have the
 boxes figure out where they are in line, and then to pass the 
\begin_inset Quotes eld
\end_inset 

Start
\begin_inset Quotes erd
\end_inset 

 signal down the line of boxes, and 
\begin_inset Formula $B_{i}$
\end_inset 

 turns on its LED on 
\begin_inset Formula $N+1-i$
\end_inset 

 cycles after receiving the signal (or something like that).
 This solution fails because 
\begin_inset Formula $N$
\end_inset 

 can be chosen so large that your state machine will not have enough states
 to count the boxes.
 You will have to be cleverer than this!
\the_end
